module sequ_detect(				//检测序列11101000
	input clk,
	input reset_n,
	input data_in,
	output check_flag
);

parameter s0=1, s1=1, s2=1, s3=0, s4=1, s5=0, s6=0, s7=0;
reg[8:0] ST;
always@(posedge clk or negedge reset_n)
begin
check_flag=0;
if(!reset_n)
	ST<=s0
else
begin
casex(ST)
s0:if(data_in==1'b1) ST<=s1;else ST<=0;
s1:if(data_in==1'b1) ST<=s2;else ST<=0;
s2:if(data_in==1'b1) ST<=s3;else ST<=0;
s3:if(data_in==1'b0) ST<=s4;else ST<=0;
s4:if(data_in==1'b1) ST<=s5;else ST<=0;
s5:if(data_in==1'b0) ST<=s6;else ST<=0;
s6:if(data_in==1'b0) ST<=s7;else ST<=0;
s7:if(data_in==1'b0) ST<=s8;else ST<=0;
s8:check_flag<=1;
default:ST<=s0;
end
