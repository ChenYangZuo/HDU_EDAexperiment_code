--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone 10 LP" LPM_SIZE=4 LPM_WIDTH=6 LPM_WIDTHS=2 data result sel
--VERSION_BEGIN 17.1 cbx_lpm_mux 2017:10:25:18:06:53:SJ cbx_mgl 2017:10:25:18:08:29:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 12 
SUBDESIGN mux_tmb
( 
	data[23..0]	:	input;
	result[5..0]	:	output;
	sel[1..0]	:	input;
) 
VARIABLE 
	result_node[5..0]	: WIRE;
	sel_node[1..0]	: WIRE;
	w_data155w[3..0]	: WIRE;
	w_data185w[3..0]	: WIRE;
	w_data210w[3..0]	: WIRE;
	w_data235w[3..0]	: WIRE;
	w_data260w[3..0]	: WIRE;
	w_data285w[3..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( (((w_data285w[1..1] & sel_node[0..0]) & (! (((w_data285w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data285w[2..2]))))) # ((((w_data285w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data285w[2..2]))) & (w_data285w[3..3] # (! sel_node[0..0])))), (((w_data260w[1..1] & sel_node[0..0]) & (! (((w_data260w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data260w[2..2]))))) # ((((w_data260w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data260w[2..2]))) & (w_data260w[3..3] # (! sel_node[0..0])))), (((w_data235w[1..1] & sel_node[0..0]) & (! (((w_data235w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data235w[2..2]))))) # ((((w_data235w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data235w[2..2]))) & (w_data235w[3..3] # (! sel_node[0..0])))), (((w_data210w[1..1] & sel_node[0..0]) & (! (((w_data210w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data210w[2..2]))))) # ((((w_data210w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data210w[2..2]))) & (w_data210w[3..3] # (! sel_node[0..0])))), (((w_data185w[1..1] & sel_node[0..0]) & (! (((w_data185w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data185w[2..2]))))) # ((((w_data185w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data185w[2..2]))) & (w_data185w[3..3] # (! sel_node[0..0])))), (((w_data155w[1..1] & sel_node[0..0]) & (! (((w_data155w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data155w[2..2]))))) # ((((w_data155w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data155w[2..2]))) & (w_data155w[3..3] # (! sel_node[0..0])))));
	sel_node[] = ( sel[1..0]);
	w_data155w[] = ( data[18..18], data[12..12], data[6..6], data[0..0]);
	w_data185w[] = ( data[19..19], data[13..13], data[7..7], data[1..1]);
	w_data210w[] = ( data[20..20], data[14..14], data[8..8], data[2..2]);
	w_data235w[] = ( data[21..21], data[15..15], data[9..9], data[3..3]);
	w_data260w[] = ( data[22..22], data[16..16], data[10..10], data[4..4]);
	w_data285w[] = ( data[23..23], data[17..17], data[11..11], data[5..5]);
END;
--VALID FILE
